{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//1、导入echarts\nimport * as echarts from 'echarts';\nimport _ from 'lodash';\nexport default {\n  data() {\n    return {\n      addForm: {\n        companyName: ''\n      },\n      addDialogVisble: false,\n      selectDepartmentName: '',\n      options: []\n    };\n  },\n  created() {},\n  //此时页面上的dom已被渲染完成，可以初始化图表\n  async mounted() {},\n  methods: {\n    // 展示添加用户的对话框\n    async showAddDialog() {\n      // console.log(id)\n      // 在展示对话框之前，获取所有种类的列表\n      let test = window.sessionStorage.getItem('token');\n      const {\n        data: res\n      } = await this.$http.post('/web/company/dropDownBox', test);\n      if (res.status !== 200) {\n        return this.$message.error('获取部门列表失败！');\n      }\n      console.log(res.data);\n      this.options = res.data;\n      console.log(this.options);\n      this.addDialogVisble = true;\n    },\n    //监听添加用户对话框的关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //点击按钮，添加新用户\n    //点击按钮，添加新用户\n    addUser() {\n      var name = [];\n      var num = [];\n      console.log(\"adduser进入\");\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return;\n        //可以发起添加用户的网络请求\n        console.log(\"进入adduser2\");\n        let test = sessionStorage.getItem(\"token\");\n        const {\n          data: res\n        } = await this.$http.post('/web/order/statistics', {\n          companyName: this.selectDepartmentName,\n          day: 7,\n          ticket: test\n        });\n        if (res.status !== 200) {\n          return this.$message.error('获取数据失败!');\n        }\n        res.data.forEach(item => {\n          name.push(item.roomName);\n          num.push(item.total);\n        });\n        //隐藏添加用户的对话框\n        this.addDialogVisble = false;\n        console.log(\"hellooo\");\n        console.log(res);\n        var myChart = echarts.init(document.getElementById('main'));\n        // 显示标题，图例和空的坐标轴\n        myChart.setOption({\n          title: {\n            text: '会议室预订数量统计'\n          },\n          tooltip: {},\n          legend: {\n            data: ['数量']\n          },\n          xAxis: {\n            data: []\n          },\n          yAxis: {},\n          series: [{\n            name: '数量',\n            type: 'bar',\n            data: []\n          }]\n        });\n        //重新获取用户列表数据\n        myChart.setOption({\n          xAxis: {\n            data: name\n          },\n          series: [{\n            // 根据名字对应到相应的系列\n            name: '数量',\n            data: num\n          }]\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","_","data","addForm","companyName","addDialogVisble","selectDepartmentName","options","created","mounted","methods","showAddDialog","test","window","sessionStorage","getItem","res","$http","post","status","$message","error","console","log","addDialogClosed","$refs","addFormRef","resetFields","addUser","name","num","validate","valid","day","ticket","forEach","item","push","roomName","total","myChart","init","document","getElementById","setOption","title","text","tooltip","legend","xAxis","yAxis","series","type"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n  </div>\n</template>\n\n<script>\n//1、导入echarts\nimport * as echarts from 'echarts'\nimport _ from 'lodash'\nexport default {\n    data(){\n        return {\n           \n             addForm:{\n                companyName:'',\n            },\n            addDialogVisble:false,\n            selectDepartmentName: '',\n            options:[]\n        }\n    },\n    created(){\n    },\n    //此时页面上的dom已被渲染完成，可以初始化图表\n    async mounted(){\n   \n    },\n    methods:{\n        // 展示添加用户的对话框\n            async showAddDialog() {\n                // console.log(id)\n                // 在展示对话框之前，获取所有种类的列表\n                let test=window.sessionStorage.getItem('token')\n                const { data: res } = await this.$http.post('/web/company/dropDownBox',test)\n                if (res.status !== 200) {\n                    return this.$message.error('获取部门列表失败！')\n                }\n                console.log(res.data)\n                this.options = res.data\n                console.log(this.options)\n                this.addDialogVisble = true\n            },\n        //监听添加用户对话框的关闭事件\n        addDialogClosed(){\n           this.$refs.addFormRef.resetFields()\n        },\n        //点击按钮，添加新用户\n        //点击按钮，添加新用户\n        addUser(){\n            var name=[];\n            var num=[];\n            console.log(\"adduser进入\")\n            this.$refs.addFormRef.validate(async valid=>{\n                if(!valid) return\n                //可以发起添加用户的网络请求\n                console.log(\"进入adduser2\")\n                let test=sessionStorage.getItem(\"token\")\n            const {data:res} = await this.$http.post('/web/order/statistics',{\n            companyName:this.selectDepartmentName,\n            day:7,\n            ticket:test\n        })\n        if(res.status!==200){\n            return this.$message.error('获取数据失败!')\n        }\n        res.data.forEach((item)=>{\n                name.push(item.roomName);\n                num.push(item.total)\n            });\n                //隐藏添加用户的对话框\n                this.addDialogVisble=false\n                console.log(\"hellooo\")\n        console.log(res)\n                var myChart=echarts.init(document.getElementById('main'))\n        // 显示标题，图例和空的坐标轴\n        myChart.setOption({\n        title: {\n            text: '会议室预订数量统计'\n        },\n        tooltip: {},\n        legend: {\n            data: ['数量']\n        },\n        xAxis: {\n            data: []\n        },\n        yAxis: {},\n        series: [\n            {\n            name: '数量',\n            type: 'bar',\n            data: []\n            }\n        ]\n        });\n                //重新获取用户列表数据\n                myChart.setOption({\n        xAxis: {\n            data: name\n        },\n        series: [\n            {\n                // 根据名字对应到相应的系列\n                name: '数量',\n                data: num\n            }\n        ]\n    })\n            })\n        },\n        \n    }\n}\n</script>"],"mappings":";AAMA;AACA,YAAAA,OAAA;AACA,OAAAC,CAAA;AACA;EACAC,KAAA;IACA;MAEAC,OAAA;QACAC,WAAA;MACA;MACAC,eAAA;MACAC,oBAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA,GACA;EACA;EACA,MAAAC,QAAA,GAEA;EACAC,OAAA;IACA;IACA,MAAAC,cAAA;MACA;MACA;MACA,IAAAC,IAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA;QAAAb,IAAA,EAAAc;MAAA,eAAAC,KAAA,CAAAC,IAAA,6BAAAN,IAAA;MACA,IAAAI,GAAA,CAAAG,MAAA;QACA,YAAAC,QAAA,CAAAC,KAAA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAP,GAAA,CAAAd,IAAA;MACA,KAAAK,OAAA,GAAAS,GAAA,CAAAd,IAAA;MACAoB,OAAA,CAAAC,GAAA,MAAAhB,OAAA;MACA,KAAAF,eAAA;IACA;IACA;IACAmB,gBAAA;MACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,WAAA;IACA;IACA;IACA;IACAC,QAAA;MACA,IAAAC,IAAA;MACA,IAAAC,GAAA;MACAR,OAAA,CAAAC,GAAA;MACA,KAAAE,KAAA,CAAAC,UAAA,CAAAK,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA;QACAV,OAAA,CAAAC,GAAA;QACA,IAAAX,IAAA,GAAAE,cAAA,CAAAC,OAAA;QACA;UAAAb,IAAA,EAAAc;QAAA,eAAAC,KAAA,CAAAC,IAAA;UACAd,WAAA,OAAAE,oBAAA;UACA2B,GAAA;UACAC,MAAA,EAAAtB;QACA;QACA,IAAAI,GAAA,CAAAG,MAAA;UACA,YAAAC,QAAA,CAAAC,KAAA;QACA;QACAL,GAAA,CAAAd,IAAA,CAAAiC,OAAA,CAAAC,IAAA;UACAP,IAAA,CAAAQ,IAAA,CAAAD,IAAA,CAAAE,QAAA;UACAR,GAAA,CAAAO,IAAA,CAAAD,IAAA,CAAAG,KAAA;QACA;QACA;QACA,KAAAlC,eAAA;QACAiB,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAP,GAAA;QACA,IAAAwB,OAAA,GAAAxC,OAAA,CAAAyC,IAAA,CAAAC,QAAA,CAAAC,cAAA;QACA;QACAH,OAAA,CAAAI,SAAA;UACAC,KAAA;YACAC,IAAA;UACA;UACAC,OAAA;UACAC,MAAA;YACA9C,IAAA;UACA;UACA+C,KAAA;YACA/C,IAAA;UACA;UACAgD,KAAA;UACAC,MAAA,GACA;YACAtB,IAAA;YACAuB,IAAA;YACAlD,IAAA;UACA;QAEA;QACA;QACAsC,OAAA,CAAAI,SAAA;UACAK,KAAA;YACA/C,IAAA,EAAA2B;UACA;UACAsB,MAAA,GACA;YACA;YACAtB,IAAA;YACA3B,IAAA,EAAA4B;UACA;QAEA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}